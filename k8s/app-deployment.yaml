apiVersion: v1
kind: ServiceAccount
metadata:
  name: task-api-sa
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: task-api-role
  namespace: default
rules:
  - apiGroups: [""]
    resources: ["pods", "pods/log"]
    verbs: ["create", "get", "list", "watch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: task-api-rb
  namespace: default
subjects:
  - kind: ServiceAccount
    name: task-api-sa
    namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: task-api-role
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: task-api
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: task-api
  template:
    metadata:
      labels:
        app: task-api
    spec:
      serviceAccountName: task-api-sa
      containers:
        - name: task-api
          image: task-api:local
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8081
          env:
            - name: MONGODB_URI
              valueFrom:
                secretKeyRef:
                  name: mongodb-conn
                  key: uri
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
---
apiVersion: v1
kind: Service
metadata:
  name: task-api
  namespace: default
spec:
  type: NodePort
  selector:
    app: task-api
  ports:
    - name: http
      port: 8081
      targetPort: 8081
      nodePort: 30081


